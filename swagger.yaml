openapi: 3.0.0
info:
  title: Messages API Documentation
  description: Optional multiline or single-line description in HTML.
  version: 0.1.9
servers:
  - url: http://api.example.com/v1
    description: Optional server description, e.g. Main (production) server
  - url: https://h.stg.app.com
    description: Optional server description, e.g. Internal staging server for testing
paths:
  /messages:
    get:
      summary: Returns a list of users.
      description: Optional extended description in CommonMark or HTML.
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ArrayOfMessages'   # Reference to an object
        '404':    # status code
          description: User not found
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Error'   # Reference to an object
        '500':
          description: 'Server error'
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Error500'   # Reference to an object
  /mreceived:  
    post:
      summary: Received Message
      description: Optional extended description in CommonMark or HTML.
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/User'   # Reference to an object
            example: 
              name: John
              email: example@domain.com 
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/User'   # Reference to an object
        '500':
          description: 'Server error'
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Error500'   # Reference to an object
  /mread:  
    post:
      summary: Reading a  message.
      description: Optional extended description in CommonMark or HTML.
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/User'   # Reference to an object
            example: 
              name: John
              email: example@domain.com 
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/User'   # Reference to an object
        '500':
          description: 'Server error'
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Error500'   # Reference to an object
  /user/{id}:
    get:
      summary: Returns a single user.
      description: Optional extended description in CommonMark or HTML.
      parameters:
        - name: id
          in: path
          schema:
            $ref: '#/components/schemas/id'   # Reference to an object
          required: true
          description: "Enter user id"
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/User'   # Reference to an object
        '404':    # status code
          description: User not found
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Error'   # Reference to an object
        '500':
          description: 'Server error'
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Error500'   # Reference to an object
    delete:
      summary: Deleting a User
      description: Deleting a user from list
      parameters:
        - name: id
          in: path
          schema:
            $ref: '#/components/schemas/id'   # Reference to an object
          required: true
          description: "user id"
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Delete'   # Reference to an object
        '404':    # status code
          description: User not found
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Error'   # Reference to an object
    put:
      summary: Updating a User
      description: Deleting a user from list
      parameters:
        - name: id
          in: path
          schema:
            $ref: '#/components/schemas/id'   # Reference to an object
          required: true
          description: "user id"
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/User'   # Reference to an object
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/User'   # Reference to an object
        '404':    # status code
          description: User not found
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Error'   # Reference to an object
components:
  schemas:
    User:    # Schema name
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10          # Property example
        name:
          type: string
          example: Srikant Bejjanky  # Property example
        email:
          type: string
          example: bejjanky@domain.com  # Property example
    ArrayOfMessages:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          name:
            type: string
          email:
            type: string
      example:
        - id: 10
          name: Jessica Smith
          email: jessica@example.com
        - id: 20
          name: Ron Stewart
          email: ron@example.com
    id:
      type: integer
      description: An id of a user
      example: 123
    Error:
      type: object
      properties:
        message:
          type: string
          example: error message
        code:
          type: string
          example: 404
    Error500:
      type: object
      properties:
        message:
          type: string
          example: Internal Server Error
        code:
          type: string
          example: 500
    Delete:
      type: object
      properties:
        message:
          type: string
          example: User Deleted